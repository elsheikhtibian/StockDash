{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobby\\\\OneDrive\\\\Documents\\\\GitHub\\\\StockDash\\\\stockdash\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React from 'react'; not needed?\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\n// function Login() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         // Basic validation logic here\n//         console.log(\"Email:\", email);\n//         console.log(\"Password:\", password);\n//     };\n\n//     return (\n\n//         <container className=\"login-container\" style={{ maxWidth: '400px', marginTop: '40px' }}>\n//         </container>\n//     );\n// }\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreateAccount = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n\n  // user will contain new user's desired username\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  // pwd will contain new user's desired password\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  // matchPwd will be used to double check the new user's password choice\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  // any error or success messages to be displayed\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  // anytime the user changes either pwd or matchPwd, check them\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd; // check passwords match\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  // anytime user, pwd, or matchPwd changes, clear any previous error messages\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  // handle user account submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if button enabled with js hack\n    const x = USER_REGEX.test(user);\n    const y = PWD_REGEX.test(pwd);\n    if (!x || !y) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    // TODO: backend half\n    console.log(user, pwd);\n    setSuccess(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./Login.js\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName ? \"valid\" : \"hide\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: validName || !user ? \"hide\" : \"invalid\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef // set focus\n          ,\n          autoComplete: \"off\" // prevent previous values from being displayed\n          ,\n          onChange: e => setUser(e.target.value) // ties input to user state\n          ,\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\" // display input requirements (see below)\n          ,\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"uidnote\",\n          className: userFocus && user && !validName ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), \"4 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 48\n          }, this), \"Must begin with a letter.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 54\n          }, this), \"Letters, numbers, underscores, hyphens are allowed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validPwd ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validPwd || !pwd ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"pwdnote\",\n          className: pwdFocus && !validPwd ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this), \"8 to 24 characters.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 48\n          }, this), \"Must include uppercase and lowercase letters, a number and a special character.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 108\n          }, this), \"Allowed special characters: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"exclamation mark\",\n            children: \"!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 57\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"at symbol\",\n            children: \"@\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 102\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"hashtag\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 140\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"dollar sign\",\n            children: \"$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 176\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            \"aria-label\": \"percent\",\n            children: \"%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 216\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm_pwd\",\n          children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCheck,\n            className: validMatch && matchPwd ? \"valid\" : \"hide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes,\n            className: validMatch || !matchPwd ? \"hide\" : \"invalid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_pwd\",\n          onChange: e => setMatchPwd(e.target.value),\n          value: matchPwd,\n          required: true,\n          \"aria-invalid\": validMatch ? \"false\" : \"true\",\n          \"aria-describedby\": \"confirmnote\",\n          onFocus: () => setMatchFocus(true),\n          onBlur: () => setMatchFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"confirmnote\",\n          className: matchFocus && !validMatch ? \"instructions\" : \"offscreen\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), \"Must match the first password input field.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Already registered?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./Login.js\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_s(CreateAccount, \"K2L7L9cVkNc42S3paB9KBpe33pw=\");\n_c = CreateAccount;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"CreateAccount\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateAccount","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","USER_REGEX","test","console","log","PWD_REGEX","match","handleSubmit","e","preventDefault","x","y","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","className","onSubmit","htmlFor","icon","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","Login","$RefreshReg$"],"sources":["C:/Users/bobby/OneDrive/Documents/GitHub/StockDash/stockdash/src/components/Login.js"],"sourcesContent":["// import React from 'react'; not needed?\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\n// function Login() {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     const handleLogin = (e) => {\r\n//         e.preventDefault();\r\n//         // Basic validation logic here\r\n//         console.log(\"Email:\", email);\r\n//         console.log(\"Password:\", password);\r\n//     };\r\n\r\n//     return (\r\n\r\n//         <container className=\"login-container\" style={{ maxWidth: '400px', marginTop: '40px' }}>\r\n//         </container>\r\n//     );\r\n// }\r\n\r\nconst CreateAccount = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    // user will contain new user's desired username\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    // pwd will contain new user's desired password\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    // matchPwd will be used to double check the new user's password choice\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    // any error or success messages to be displayed\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(user);\r\n        console.log(result);\r\n        console.log(user);\r\n        setValidName(result);\r\n    }, [user])\r\n\r\n    // anytime the user changes either pwd or matchPwd, check them\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(pwd);\r\n        console.log(result);\r\n        console.log(pwd);\r\n        setValidPwd(result);\r\n        const match = pwd === matchPwd; // check passwords match\r\n        setValidMatch(match);\r\n    }, [pwd, matchPwd])\r\n\r\n    // anytime user, pwd, or matchPwd changes, clear any previous error messages\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    // handle user account submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with js hack\r\n        const x = USER_REGEX.test(user);\r\n        const y = PWD_REGEX.test(pwd);\r\n        if (!x || !y) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        // TODO: backend half\r\n        console.log(user, pwd);\r\n        setSuccess(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        {/* TODO: router link here */}\r\n                        <a href=\"./Login.js\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Create Account</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                            <span className={validName ? \"valid\" : \"hide\"}>\r\n                                <FontAwesomeIcon icon={faCheck} />\r\n                            </span>\r\n                            <span className={validName || !user ? \"hide\" : \"invalid\"}>\r\n                                <FontAwesomeIcon icon={faTimes} />\r\n                            </span>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef} // set focus\r\n                            autoComplete=\"off\" // prevent previous values from being displayed\r\n                            onChange={(e) => setUser(e.target.value)} // ties input to user state\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\" // display input requirements (see below)\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            4 to 24 characters.<br />\r\n                            Must begin with a letter.<br />\r\n                            Letters, numbers, underscores, hyphens are allowed.\r\n                        </p>\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            8 to 24 characters.<br />\r\n                            Must include uppercase and lowercase letters, a number and a special character.<br />\r\n                            Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                        </p>\r\n\r\n\r\n                        <label htmlFor=\"confirm_pwd\">\r\n                            Confirm Password:\r\n                            <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                            <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"confirm_pwd\"\r\n                            onChange={(e) => setMatchPwd(e.target.value)}\r\n                            value={matchPwd}\r\n                            required\r\n                            aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                            aria-describedby=\"confirmnote\"\r\n                            onFocus={() => setMatchFocus(true)}\r\n                            onBlur={() => setMatchFocus(false)}\r\n                        />\r\n                        <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                            <FontAwesomeIcon icon={faInfoCircle} />\r\n                            Must match the first password input field.\r\n                        </p>\r\n\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign Up</button>\r\n                    </form>\r\n                    <p>\r\n                        Already registered?<br />\r\n                        <span className=\"line\">\r\n                            {/* TODO: router link here */}\r\n                            <a href=\"./Login.js\">Sign In</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}