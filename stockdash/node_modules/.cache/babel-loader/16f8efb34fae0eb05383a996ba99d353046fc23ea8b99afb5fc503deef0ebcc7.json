{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bobby\\\\OneDrive\\\\Documents\\\\GitHub\\\\StockDash\\\\stockdash\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React from 'react'; not needed?\nimport { useRef, useState, useEffect } from \"react\";\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Login.css\";\n\n// function Login() {\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleLogin = (e) => {\n//         e.preventDefault();\n//         // Basic validation logic here\n//         console.log(\"Email:\", email);\n//         console.log(\"Password:\", password);\n//     };\n\n//     return (\n\n//         <container className=\"login-container\" style={{ maxWidth: '400px', marginTop: '40px' }}>\n//         </container>\n//     );\n// }\n\n// username and password requirements\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,64}$/;\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%]).{8,64}$/;\nconst Login = () => {\n  _s();\n  const userRef = useRef();\n  const errRef = useRef();\n\n  // user will contain new user's desired username\n  const [user, setUser] = useState('');\n  const [validName, setValidName] = useState(false);\n  const [userFocus, setUserFocus] = useState(false);\n\n  // pwd will contain new user's desired password\n  const [pwd, setPwd] = useState('');\n  const [validPwd, setValidPwd] = useState(false);\n  const [pwdFocus, setPwdFocus] = useState(false);\n\n  // matchPwd will be used to double check the new user's password choice\n  const [matchPwd, setMatchPwd] = useState('');\n  const [validMatch, setValidMatch] = useState(false);\n  const [matchFocus, setMatchFocus] = useState(false);\n\n  // any error or success messages to be displayed\n  const [errMsg, setErrMsg] = useState('');\n  const [success, setSuccess] = useState(false);\n  useEffect(() => {\n    userRef.current.focus();\n  }, []);\n  useEffect(() => {\n    const result = USER_REGEX.test(user);\n    console.log(result);\n    console.log(user);\n    setValidName(result);\n  }, [user]);\n\n  // anytime the user changes either pwd or matchPwd, check them\n  useEffect(() => {\n    const result = PWD_REGEX.test(pwd);\n    console.log(result);\n    console.log(pwd);\n    setValidPwd(result);\n    const match = pwd === matchPwd; // check passwords match\n    setValidMatch(match);\n  }, [pwd, matchPwd]);\n\n  // anytime user, pwd, or matchPwd changes, clear any previous error messages\n  useEffect(() => {\n    setErrMsg('');\n  }, [user, pwd, matchPwd]);\n\n  // handle user account submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // if button enabled with js hack\n    const x = USER_REGEX.test(user);\n    const y = PWD_REGEX.test(pwd);\n    if (!x || !y) {\n      setErrMsg(\"Invalid Entry\");\n      return;\n    }\n    // TODO: backend half\n    console.log(user, pwd);\n    setSuccess(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"login\", {\n    className: \"Login\",\n    children: success ? /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Success!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"./Login.js\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        ref: errRef,\n        className: errMsg ? \"errmsg\" : \"offscreen\",\n        \"aria-live\": \"assertive\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          ref: userRef // set focus\n          ,\n          autoComplete: \"off\" // prevent previous values from being displayed\n          ,\n          onChange: e => setUser(e.target.value) // ties input to user state\n          ,\n          required: true,\n          \"aria-invalid\": validName ? \"false\" : \"true\",\n          \"aria-describedby\": \"uidnote\" // display input requirements (see below)\n          ,\n          onFocus: () => setUserFocus(true),\n          onBlur: () => setUserFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          onChange: e => setPwd(e.target.value),\n          value: pwd,\n          required: true,\n          \"aria-invalid\": validPwd ? \"false\" : \"true\",\n          \"aria-describedby\": \"pwdnote\",\n          onFocus: () => setPwdFocus(true),\n          onBlur: () => setPwdFocus(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !validName || !validPwd || !validMatch ? true : false,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"line\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./CreateAccount.js\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"K2L7L9cVkNc42S3paB9KBpe33pw=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","useState","useEffect","faCheck","faTimes","faInfoCircle","FontAwesomeIcon","jsxDEV","_jsxDEV","USER_REGEX","PWD_REGEX","Login","_s","userRef","errRef","user","setUser","validName","setValidName","userFocus","setUserFocus","pwd","setPwd","validPwd","setValidPwd","pwdFocus","setPwdFocus","matchPwd","setMatchPwd","validMatch","setValidMatch","matchFocus","setMatchFocus","errMsg","setErrMsg","success","setSuccess","current","focus","result","test","console","log","match","handleSubmit","e","preventDefault","x","y","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","ref","onSubmit","htmlFor","type","id","autoComplete","onChange","target","value","required","onFocus","onBlur","disabled","_c","$RefreshReg$"],"sources":["C:/Users/bobby/OneDrive/Documents/GitHub/StockDash/stockdash/src/components/Login.js"],"sourcesContent":["// import React from 'react'; not needed?\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Login.css\";\r\n\r\n// function Login() {\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     const handleLogin = (e) => {\r\n//         e.preventDefault();\r\n//         // Basic validation logic here\r\n//         console.log(\"Email:\", email);\r\n//         console.log(\"Password:\", password);\r\n//     };\r\n\r\n//     return (\r\n\r\n//         <container className=\"login-container\" style={{ maxWidth: '400px', marginTop: '40px' }}>\r\n//         </container>\r\n//     );\r\n// }\r\n\r\n// username and password requirements\r\nconst USER_REGEX = /^[a-zA-Z][a-zA-Z0-9-_]{3,64}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%]).{8,64}$/;\r\n\r\nconst Login = () => {\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    // user will contain new user's desired username\r\n    const [user, setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    // pwd will contain new user's desired password\r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n    // matchPwd will be used to double check the new user's password choice\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    // any error or success messages to be displayed\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const result = USER_REGEX.test(user);\r\n        console.log(result);\r\n        console.log(user);\r\n        setValidName(result);\r\n    }, [user])\r\n\r\n    // anytime the user changes either pwd or matchPwd, check them\r\n    useEffect(() => {\r\n        const result = PWD_REGEX.test(pwd);\r\n        console.log(result);\r\n        console.log(pwd);\r\n        setValidPwd(result);\r\n        const match = pwd === matchPwd; // check passwords match\r\n        setValidMatch(match);\r\n    }, [pwd, matchPwd])\r\n\r\n    // anytime user, pwd, or matchPwd changes, clear any previous error messages\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    // handle user account submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // if button enabled with js hack\r\n        const x = USER_REGEX.test(user);\r\n        const y = PWD_REGEX.test(pwd);\r\n        if (!x || !y) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        // TODO: backend half\r\n        console.log(user, pwd);\r\n        setSuccess(true);\r\n    }\r\n\r\n    return (\r\n        <login className=\"Login\">\r\n            {success ? (\r\n                <section>\r\n                    <h1>Success!</h1>\r\n                    <p>\r\n                        {/* TODO: router link here */}\r\n                        <a href=\"./Login.js\">Sign In</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <section>\r\n                    <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                    <h1>Create Account</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"username\">\r\n                            Username:\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            ref={userRef} // set focus\r\n                            autoComplete=\"off\" // prevent previous values from being displayed\r\n                            onChange={(e) => setUser(e.target.value)} // ties input to user state\r\n                            required\r\n                            aria-invalid={validName ? \"false\" : \"true\"}\r\n                            aria-describedby=\"uidnote\" // display input requirements (see below)\r\n                            onFocus={() => setUserFocus(true)}\r\n                            onBlur={() => setUserFocus(false)}\r\n                        />\r\n                        <label htmlFor=\"password\">\r\n                            Password:\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            onChange={(e) => setPwd(e.target.value)}\r\n                            value={pwd}\r\n                            required\r\n                            aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                            aria-describedby=\"pwdnote\"\r\n                            onFocus={() => setPwdFocus(true)}\r\n                            onBlur={() => setPwdFocus(false)}\r\n                        />\r\n                        <button disabled={!validName || !validPwd || !validMatch ? true : false}>Sign In</button>\r\n                    </form>\r\n                    <p>\r\n                        Don't have an account?<br />\r\n                        <span className=\"line\">\r\n                            {/* TODO: router link here */}\r\n                            <a href=\"./CreateAccount.js\">Sign Up</a>\r\n                        </span>\r\n                    </p>\r\n                </section>\r\n            )}\r\n        </login>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}